import time, sys
from database import Session, Review, Editor, create_tables, login_editor, register_editor, view_reviews
import datetime
import matplotlib.pyplot as plt
from formula import calculate_final_score  # –∏–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏

# –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è –∂–∞–Ω—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
genre_weights = {
    "—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞": {"idea": 0.35, "style": 0.20, "plot": 0.25, "emotion": 0.15, "influence": 0.05},
    "–¥–µ—Ç–µ–∫—Ç–∏–≤": {"idea": 0.20, "style": 0.20, "plot": 0.40, "emotion": 0.10, "influence": 0.10},
    "—Ä–æ–º–∞–Ω—Ç–∏–∫–∞": {"idea": 0.15, "style": 0.25, "plot": 0.20, "emotion": 0.30, "influence": 0.10},
    "–ø–æ—ç–∑–∏—è": {"idea": 0.10, "style": 0.30, "plot": 0.10, "emotion": 0.40, "influence": 0.10},
    "–Ω–∞—É—á–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞": {"idea": 0.25, "style": 0.20, "plot": 0.25, "emotion": 0.15, "influence": 0.15},
    "–±–µ–∑–∂–∞–Ω—Ä–æ–≤—ã–π": {}  # –ó–¥–µ—Å—å —Ä–µ–¥–∞–∫—Ç–æ—Ä —É–∫–∞–∂–µ—Ç –≤–µ—Å–∞ –≤—Ä—É—á–Ω—É—é
}

def save_review_to_file(title, author, evaluator, genre, idea, idea_reason, style, style_reason, plot, plot_reason, emotion, emotion_reason, influence, influence_reason, final_score):
    filename = f"{title.replace(' ', '_')}_review.txt"
    with open(filename, "w", encoding="utf-8") as file:
        file.write(f"üìñ –û—Ü–µ–Ω–∫–∞ –∫–Ω–∏–≥–∏: {title}\n")
        file.write(f"–ê–≤—Ç–æ—Ä: {author}\n")
        file.write(f"–û—Ü–µ–Ω—â–∏–∫: {evaluator}\n")
        file.write(f"–ñ–∞–Ω—Ä: {genre}\n\n")
        file.write(f"–ò–¥–µ—è –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {idea}/20\n")
        file.write(f"  –ü—Ä–∏—á–∏–Ω–∞: {idea_reason}\n\n")
        file.write(f"–ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ —Å—Ç–∏–ª—å: {style}/20\n")
        file.write(f"  –ü—Ä–∏—á–∏–Ω–∞: {style_reason}\n\n")
        file.write(f"–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Å—é–∂–µ—Ç–∞: {plot}/20\n")
        file.write(f"  –ü—Ä–∏—á–∏–Ω–∞: {plot_reason}\n\n")
        file.write(f"–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫: {emotion}/20\n")
        file.write(f"  –ü—Ä–∏—á–∏–Ω–∞: {emotion_reason}\n\n")
        file.write(f"–í–ª–∏—è–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–±–æ–Ω—É—Å): {influence}/20\n")
        file.write(f"  –ü—Ä–∏—á–∏–Ω–∞: {influence_reason}\n\n")
        file.write(f"üìä –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: {final_score:.2f}/100\n\n")
        file.write("–§–æ—Ä–º—É–ª–∞:\n")
        file.write("(–ò–¥–µ—è*W1 + –°—Ç–∏–ª—å*W2 + –°—é–∂–µ—Ç*W3 + –≠–º–æ—Ü–∏–∏*W4) * Penalty + (–í–ª–∏—è–Ω–∏–µ*W5), –∑–∞—Ç–µ–º —É–º–Ω–æ–∂–∏—Ç—å –Ω–∞ 5\n")
        file.write("Penalty = 1.0, –µ—Å–ª–∏ –≤—Å–µ –æ—Ü–µ–Ω–∫–∏ ‚â• 10; –∏–Ω–∞—á–µ, 1.0 + ((—Å—Ä. –æ—Å—Ç–∞–ª—å–Ω—ã—Ö ‚Äì –≥–ª–∞–≤–Ω–∞—è)/—Å—Ä. –æ—Å—Ç–∞–ª—å–Ω—ã—Ö)*0.5\n")
    print(f"‚úÖ –û—Ü–µ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª: {filename}")

def plot_review_scores(idea, style, plot, emotion, influence):
    labels = ["–ò–¥–µ—è", "–°—Ç–∏–ª—å", "–°—é–∂–µ—Ç", "–≠–º–æ—Ü–∏–∏", "–í–ª–∏—è–Ω–∏–µ"]
    values = [idea, style, plot, emotion, influence]
    plt.figure(figsize=(8, 5))
    plt.bar(labels, values, color=["blue", "green", "red", "purple", "orange"])
    plt.ylim(0, 20)
    plt.title("–ë–∞–ª–ª—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º")
    plt.xlabel("–ö—Ä–∏—Ç–µ—Ä–∏–∏")
    plt.ylabel("–ë–∞–ª–ª—ã")
    plt.show()

def edit_review():
    session = Session()
    review_id = input("–í–≤–µ–¥–∏—Ç–µ ID –æ—Ü–µ–Ω–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ").strip()
    review = session.query(Review).filter_by(id=review_id).first()
    if not review:
        print("‚ùå –û—Ü–µ–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        session.close()
        return
    print(f"–¢–µ–∫—É—â–∏–µ –æ—Ü–µ–Ω–∫–∏: –ò–¥–µ—è: {review.idea}, –°—Ç–∏–ª—å: {review.style}, –°—é–∂–µ—Ç: {review.plot}, –≠–º–æ—Ü–∏–∏: {review.emotion}, –í–ª–∏—è–Ω–∏–µ: {review.influence}")
    review.idea = int(input("–ù–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ '–ò–¥–µ—è –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å': "))
    review.idea_reason = input("–ù–æ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏ '–ò–¥–µ—è –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å': ").strip()
    review.style = int(input("–ù–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ '–ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ —Å—Ç–∏–ª—å': "))
    review.style_reason = input("–ù–æ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏ '–ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ —Å—Ç–∏–ª—å': ").strip()
    review.plot = int(input("–ù–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ '–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Å—é–∂–µ—Ç–∞': "))
    review.plot_reason = input("–ù–æ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏ '–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Å—é–∂–µ—Ç–∞': ").strip()
    review.emotion = int(input("–ù–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫': "))
    review.emotion_reason = input("–ù–æ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏ '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫': ").strip()
    review.influence = int(input("–ù–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ '–í–ª–∏—è–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è' (–±–æ–Ω—É—Å): "))
    review.influence_reason = input("–ù–æ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏ '–í–ª–∏—è–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è': ").strip()

    if review.genre != "–±–µ–∑–∂–∞–Ω—Ä–æ–≤—ã–π":
        weights = genre_weights.get(review.genre, {})
    else:
        weights = {}
        print("üîπ –ë–µ–∑–∂–∞–Ω—Ä–æ–≤—ã–π —Ä–µ–∂–∏–º: —É–∫–∞–∂–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –¥–ª—è –æ—Ü–µ–Ω–∫–∏ (—Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 1.0)")
        weights["idea"] = float(input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è '–ò–¥–µ—è': "))
        weights["style"] = float(input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è '–°—Ç–∏–ª—å': "))
        weights["plot"] = float(input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è '–°—é–∂–µ—Ç': "))
        weights["emotion"] = float(input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è '–≠–º–æ—Ü–∏–∏': "))
        weights["influence"] = float(input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è '–í–ª–∏—è–Ω–∏–µ' (–±–æ–Ω—É—Å): "))
        total_weight = sum(weights.values())
        if abs(total_weight - 1.0) > 1e-6:
            print("‚ùå –û—à–∏–±–∫–∞: —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 1.0!")
            session.close()
            return

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å—á—ë—Ç–∞ –∏—Ç–æ–≥–æ–≤–æ–π –æ—Ü–µ–Ω–∫–∏
    review.final_score = calculate_final_score(review.idea, review.style,
                                               review.plot, review.emotion,
                                               review.influence, weights)
    session.commit()
    session.close()
    print("‚úÖ –û—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")

def adaptive_review_check(genre, current_score, review_id):
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–∑—ã–≤—ã –¥–∞–Ω–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞
    session = Session()
    reviews = session.query(Review).filter(Review.genre == genre).all()
    count_reviews = len(reviews)
    if count_reviews < 100:
        session.close()
        return  # –ê–¥–∞–ø—Ç–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
    avg_score = sum(r.final_score for r in reviews) / count_reviews
    session.close()
    # –ï—Å–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –±–æ–ª—å—à–µ 15% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    if abs(current_score - avg_score) > 0.15 * avg_score:
        choice = input(f"–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –ø–æ –∂–∞–Ω—Ä—É '{genre}' —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {avg_score:.2f}/100. "
                       f"–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞ {current_score:.2f}/100 —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è. –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ü–µ–Ω–∫—É –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é? (y/n): ").strip().lower()
        if choice == "y":
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ü–µ–Ω–∫—É –≤ –±–∞–∑–µ
            session = Session()
            review = session.query(Review).filter_by(id=review_id).first()
            if review:
                review.final_score = avg_score
                session.commit()
                print(f"‚úÖ –û—Ü–µ–Ω–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ {avg_score:.2f}/100.")
            session.close()

def write_review(username):
    session = Session()
    title = input("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ").strip()
    author = input("–ê–≤—Ç–æ—Ä: ").strip()
    genre = input("–ñ–∞–Ω—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞, –¥–µ—Ç–µ–∫—Ç–∏–≤, —Ä–æ–º–∞–Ω—Ç–∏–∫–∞, –ø–æ—ç–∑–∏—è, –Ω–∞—É—á–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞, –±–µ–∑–∂–∞–Ω—Ä–æ–≤—ã–π): ").strip().lower()
    if genre not in genre_weights:
        print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∂–∞–Ω—Ä. –ë–µ–∑–∂–∞–Ω—Ä–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")
        genre = "–±–µ–∑–∂–∞–Ω—Ä–æ–≤—ã–π"
        weights = {}
        print("üîπ –£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –≤–∞–∂–Ω–æ—Å—Ç–∏ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ (—Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 1.0)")
        weights["idea"] = float(input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è '–ò–¥–µ—è –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å': "))
        weights["style"] = float(input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è '–ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ —Å—Ç–∏–ª—å': "))
        weights["plot"] = float(input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è '–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Å—é–∂–µ—Ç–∞': "))
        weights["emotion"] = float(input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫': "))
        weights["influence"] = float(input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è '–í–ª–∏—è–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è' (–±–æ–Ω—É—Å): "))
        total_weight = sum(weights.values())
        if abs(total_weight - 1.0) > 1e-6:
            print("‚ùå –û—à–∏–±–∫–∞: —Å—É–º–º–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 1.0! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            session.close()
            return
    else:
        weights = genre_weights[genre]
    try:
        idea = int(input("–û—Ü–µ–Ω–∫–∞ '–ò–¥–µ—è –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å' (0-20): "))
        style = int(input("–û—Ü–µ–Ω–∫–∞ '–ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ —Å—Ç–∏–ª—å' (0-20): "))
        plot = int(input("–û—Ü–µ–Ω–∫–∞ '–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Å—é–∂–µ—Ç–∞' (0-20): "))
        emotion = int(input("–û—Ü–µ–Ω–∫–∞ '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫' (0-20): "))
        influence = int(input("–û—Ü–µ–Ω–∫–∞ '–í–ª–∏—è–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è' (–±–æ–Ω—É—Å, 0-20): "))
    except ValueError:
        print("‚ùå –û—à–∏–±–∫–∞: –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        session.close()
        return
    idea_reason = input("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏ '–ò–¥–µ—è –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å': ").strip()
    style_reason = input("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏ '–ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ —Å—Ç–∏–ª—å': ").strip()
    plot_reason = input("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏ '–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Å—é–∂–µ—Ç–∞': ").strip()
    emotion_reason = input("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏ '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫': ").strip()
    influence_reason = input("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏ '–í–ª–∏—è–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è': ").strip()

    final_score = calculate_final_score(idea, style, plot, emotion, influence, weights)
    print(f"–ö–æ–Ω–µ—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: {final_score:.2f}/100")
    save_to_db = input("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∑—ã–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö? (y/n): ").strip().lower()
    review_id = None
    if save_to_db == "y":
        review = Review(title=title, author=author, evaluator=username, genre=genre,
                        idea=idea, style=style, plot=plot, emotion=emotion, influence=influence,
                        final_score=final_score, review_date=datetime.date.today(),
                        idea_reason=idea_reason, style_reason=style_reason,
                        plot_reason=plot_reason, emotion_reason=emotion_reason,
                        influence_reason=influence_reason)
        session.add(review)
        session.commit()
        review_id = review.id
        print("‚úÖ –û—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
    else:
        print("‚ùå –û—Ç–∑—ã–≤ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
    session.close()
    
    save_file = input("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –≤ —Ñ–∞–π–ª? (y/n): ").strip().lower()
    if save_file == "y":
        save_review_to_file(title, author, username, genre, idea, idea_reason,
                            style, style_reason, plot, plot_reason,
                            emotion, emotion_reason, influence,
                            influence_reason, final_score)
        plot_review_scores(idea, style, plot, emotion, influence)
    
    # –ï—Å–ª–∏ –æ—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —Å –∂–∞–Ω—Ä–æ–≤—ã–º —Å—Ä–µ–¥–Ω–∏–º
    if review_id is not None:
        adaptive_review_check(genre, final_score, review_id)

def view_reviews():
    session = Session()
    reviews = session.query(Review).all()
    if not reviews:
        print("‚ùå –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫.")
    else:
        for review in reviews:
            print(f"\nID: {review.id}")
            print(f"üìñ {review.title} ({review.author}) - {review.genre}")
            print(f"–û—Ü–µ–Ω–∫–∞: {review.final_score}/100")
            print(f"–û—Ü–µ–Ω–∏–ª: {review.evaluator} | –î–∞—Ç–∞: {review.review_date}")
    session.close()

def delete_review():
    session = Session()
    review_id = input("–í–≤–µ–¥–∏—Ç–µ ID –æ—Ü–µ–Ω–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip()
    review = session.query(Review).filter_by(id=review_id).first()
    if not review:
        print("‚ùå –û—Ü–µ–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    else:
        session.delete(review)
        session.commit()
        print("‚úÖ –û—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.")
    session.close()

def simulate_loading():
    print("–ó–∞–≥—Ä—É–∑–∫–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
    total = 20
    for i in range(total):
        sys.stdout.write("\r[" + "#"*(i+1) + " "*(total-i-1) + "]")
        sys.stdout.flush()
        time.sleep(0.1)
    print("\n")

def main():
    print("\nüîπ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –æ—Ü–µ–Ω–∫–∏ –∫–Ω–∏–≥ üîπ")
    simulate_loading()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    create_tables()
    logged_in = False
    current_user = None
    while True:
        if not logged_in:
            print("1. –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
            print("2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞")
            print("3. –í—ã–π—Ç–∏")
            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
            if choice == "1":
                username = input("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω: ").strip()
                password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ").strip()
                if login_editor(username, password):
                    logged_in = True
                    current_user = username
                    print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥.")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.")
            elif choice == "2":
                register_editor()
            elif choice == "3":
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            else:
                print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        else:
            print("1. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ—Ü–µ–Ω–∫–∏")
            print("2. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ü–µ–Ω–∫—É")
            print("3. –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤")
            print("4. –£–¥–∞–ª–∏—Ç—å –æ—Ü–µ–Ω–∫—É")
            print("5. –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã")
            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
            if choice == "1":
                view_reviews()
            elif choice == "2":
                edit_review()
            elif choice == "3":
                write_review(current_user)
            elif choice == "4":
                delete_review()
            elif choice == "5":
                logged_in = False
                current_user = None
                print("‚úÖ –í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.")
            else:
                print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                
if __name__ == "__main__":
    main()
