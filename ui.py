from tkinter import *
from tkinter import simpledialog, messagebox
import datetime
from database import create_tables, login_editor, register_editor, Session, Review
from formula import calculate_final_score
from main import genre_weights, save_review_to_file, plot_review_scores

current_user = None
root = None
auth_frame = None
app_frame = None

def login():
    global current_user
    username = simpledialog.askstring("–í—Ö–æ–¥", "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:")
    password = simpledialog.askstring("–í—Ö–æ–¥", "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:", show='*')
    if username and password:
        if login_editor(username, password):
            current_user = username
            messagebox.showinfo("–£—Å–ø–µ—Ö", "–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!")
            show_app_ui()
        else:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å.")

def register():
    username = simpledialog.askstring("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω:")
    password = simpledialog.askstring("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:", show='*')
    if username and password:
        session = Session()
        try:
            register_editor()
            messagebox.showinfo("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–†–µ–¥–∞–∫—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        finally:
            session.close()

def view_reviews_ui():
    session = Session()
    reviews = session.query(Review).all()
    session.close()
    win = Toplevel(root)
    win.title("–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤")
    text_area = Text(win, width=80, height=20)
    text_area.pack(padx=10, pady=10)
    if not reviews:
        text_area.insert(END, "‚ùå –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫.")
    else:
        for review in reviews:
            text_area.insert(END, f"ID: {review.id}\n")
            text_area.insert(END, f"üìñ {review.title} ({review.author}) - {review.genre}\n")
            text_area.insert(END, f"–û—Ü–µ–Ω–∫–∞: {review.final_score}/100\n")
            text_area.insert(END, f"–û—Ü–µ–Ω–∏–ª: {review.evaluator} | –î–∞—Ç–∞: {review.review_date}\n")
            text_area.insert(END, f"–ü—Ä–∏—á–∏–Ω–∞ '–ò–¥–µ—è': {review.idea_reason}\n")
            text_area.insert(END, f"–ü—Ä–∏—á–∏–Ω–∞ '–°—Ç–∏–ª—å': {review.style_reason}\n")
            text_area.insert(END, f"–ü—Ä–∏—á–∏–Ω–∞ '–°—é–∂–µ—Ç': {review.plot_reason}\n")
            text_area.insert(END, f"–ü—Ä–∏—á–∏–Ω–∞ '–≠–º–æ—Ü–∏–∏': {review.emotion_reason}\n")
            text_area.insert(END, f"–ü—Ä–∏—á–∏–Ω–∞ '–í–ª–∏—è–Ω–∏–µ': {review.influence_reason}\n")
            text_area.insert(END, "-------------------------\n")

def write_review_ui():
    global current_user
    if not current_user:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!")
        return
    title = simpledialog.askstring("–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤", "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏:")
    author = simpledialog.askstring("–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤", "–ê–≤—Ç–æ—Ä:")
    genre_str = simpledialog.askstring("–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤", "–ñ–∞–Ω—Ä:")
    if not all([title, author, genre_str]):
        messagebox.showerror("–û—à–∏–±–∫–∞", "–í—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.")
        return
    genre = genre_str.lower()
    try:
        idea = int(simpledialog.askstring("–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤", "–û—Ü–µ–Ω–∫–∞ '–ò–¥–µ—è' (0-20):"))
        style = int(simpledialog.askstring("–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤", "–û—Ü–µ–Ω–∫–∞ '–°—Ç–∏–ª—å' (0-20):"))
        plot = int(simpledialog.askstring("–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤", "–û—Ü–µ–Ω–∫–∞ '–°—é–∂–µ—Ç' (0-20):"))
        emotion = int(simpledialog.askstring("–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤", "–û—Ü–µ–Ω–∫–∞ '–≠–º–æ—Ü–∏–∏' (0-20):"))
        influence = int(simpledialog.askstring("–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤", "–û—Ü–µ–Ω–∫–∞ '–í–ª–∏—è–Ω–∏–µ' (0-20):"))
    except Exception:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.")
        return
    idea_reason = simpledialog.askstring("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏", "–ü—Ä–∏—á–∏–Ω–∞ '–ò–¥–µ—è':", initialvalue="", parent=root)
    style_reason = simpledialog.askstring("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏", "–ü—Ä–∏—á–∏–Ω–∞ '–°—Ç–∏–ª—å':", initialvalue="", parent=root)
    plot_reason = simpledialog.askstring("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏", "–ü—Ä–∏—á–∏–Ω–∞ '–°—é–∂–µ—Ç':", initialvalue="", parent=root)
    emotion_reason = simpledialog.askstring("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏", "–ü—Ä–∏—á–∏–Ω–∞ '–≠–º–æ—Ü–∏–∏':", initialvalue="", parent=root)
    influence_reason = simpledialog.askstring("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ü–µ–Ω–∫–∏", "–ü—Ä–∏—á–∏–Ω–∞ '–í–ª–∏—è–Ω–∏–µ':", initialvalue="", parent=root)
    weights = genre_weights.get(genre)
    if weights is None or genre == "–±–µ–∑–∂–∞–Ω—Ä–æ–≤—ã–π":
        messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ë–µ–∑–∂–∞–Ω—Ä–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –£–∫–∞–∂–∏—Ç–µ –≤–µ—Å–∞ –≤—Ä—É—á–Ω—É—é.")
        try:
            idea_w = float(simpledialog.askstring("–í–µ—Å", "–í–µ—Å –¥–ª—è '–ò–¥–µ—è':"))
            style_w = float(simpledialog.askstring("–í–µ—Å", "–í–µ—Å –¥–ª—è '–°—Ç–∏–ª—å':"))
            plot_w = float(simpledialog.askstring("–í–µ—Å", "–í–µ—Å –¥–ª—è '–°—é–∂–µ—Ç':"))
            emotion_w = float(simpledialog.askstring("–í–µ—Å", "–í–µ—Å –¥–ª—è '–≠–º–æ—Ü–∏–∏':"))
            influence_w = float(simpledialog.askstring("–í–µ—Å", "–í–µ—Å –¥–ª—è '–í–ª–∏—è–Ω–∏–µ' (–±–æ–Ω—É—Å):"))
            weights = {"idea": idea_w, "style": style_w, "plot": plot_w, "emotion": emotion_w, "influence": influence_w}
        except Exception:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –≤–µ—Å–æ–≤.")
            return
    final_score = calculate_final_score(idea, style, plot, emotion, influence, weights)
    messagebox.showinfo("–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞", f"–ö–æ–Ω–µ—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: {final_score:.2f}/100")
    session = Session()
    review = Review(title=title, author=author, evaluator=current_user, genre=genre,
                    idea=idea, style=style, plot=plot, emotion=emotion, influence=influence,
                    final_score=final_score, review_date=datetime.date.today(),
                    idea_reason=idea_reason, style_reason=style_reason,
                    plot_reason=plot_reason, emotion_reason=emotion_reason,
                    influence_reason=influence_reason)
    session.add(review)
    session.commit()
    session.close()
    messagebox.showinfo("–û—Ç–∑—ã–≤", "–û—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
    
    save_file = messagebox.askyesno("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª", "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –≤ —Ñ–∞–π–ª?")
    if save_file:
        save_review_to_file(title, author, current_user, genre, idea, idea_reason,
                            style, style_reason, plot, plot_reason,
                            emotion, emotion_reason, influence, influence_reason, final_score)
    
    plot_graph = messagebox.askyesno("–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫", "–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –æ—Ü–µ–Ω–æ–∫?")
    if plot_graph:
        plot_review_scores(idea, style, plot, emotion, influence)

def edit_review_ui():
    review_id = simpledialog.askstring("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", "–í–≤–µ–¥–∏—Ç–µ ID –æ—Ç–∑—ã–≤–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    if not review_id:
        messagebox.showerror("–û—à–∏–±–∫–∞", "ID –æ—Ç–∑—ã–≤–∞ –Ω–µ –≤–≤–µ–¥—ë–Ω!")
        return
    session = Session()
    review = session.query(Review).filter_by(id=review_id).first()
    if not review:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        session.close()
        return
    new_idea = simpledialog.askinteger("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", f"–ù–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ '–ò–¥–µ—è' (—Ç–µ–∫—É—â–µ–µ {review.idea}):")
    new_style = simpledialog.askinteger("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", f"–ù–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ '–°—Ç–∏–ª—å' (—Ç–µ–∫—É—â–µ–µ {review.style}):")
    new_plot = simpledialog.askinteger("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", f"–ù–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ '–°—é–∂–µ—Ç' (—Ç–µ–∫—É—â–µ–µ {review.plot}):")
    new_emotion = simpledialog.askinteger("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", f"–ù–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ '–≠–º–æ—Ü–∏–∏' (—Ç–µ–∫—É—â–µ–µ {review.emotion}):")
    new_influence = simpledialog.askinteger("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", f"–ù–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ '–í–ª–∏—è–Ω–∏–µ' (—Ç–µ–∫—É—â–µ–µ {review.influence}):")
    
    new_idea_reason = simpledialog.askstring("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", "–ù–æ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ '–ò–¥–µ—è':", initialvalue=review.idea_reason, parent=root)
    new_style_reason = simpledialog.askstring("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", "–ù–æ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ '–°—Ç–∏–ª—å':", initialvalue=review.style_reason, parent=root)
    new_plot_reason = simpledialog.askstring("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", "–ù–æ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ '–°—é–∂–µ—Ç':", initialvalue=review.plot_reason, parent=root)
    new_emotion_reason = simpledialog.askstring("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", "–ù–æ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ '–≠–º–æ—Ü–∏–∏':", initialvalue=review.emotion_reason, parent=root)
    new_influence_reason = simpledialog.askstring("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", "–ù–æ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ '–í–ª–∏—è–Ω–∏–µ':", initialvalue=review.influence_reason, parent=root)
    
    review.idea = new_idea if new_idea is not None else review.idea
    review.style = new_style if new_style is not None else review.style
    review.plot = new_plot if new_plot is not None else review.plot
    review.emotion = new_emotion if new_emotion is not None else review.emotion
    review.influence = new_influence if new_influence is not None else review.influence
    review.idea_reason = new_idea_reason or review.idea_reason
    review.style_reason = new_style_reason or review.style_reason
    review.plot_reason = new_plot_reason or review.plot_reason
    review.emotion_reason = new_emotion_reason or review.emotion_reason
    review.influence_reason = new_influence_reason or review.influence_reason
    
    weights = genre_weights.get(review.genre)
    if weights is None or review.genre == "–±–µ–∑–∂–∞–Ω—Ä–æ–≤—ã–π":
        messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ë–µ–∑–∂–∞–Ω—Ä–æ–≤—ã–π —Ä–µ–∂–∏–º: —É–∫–∞–∂–∏—Ç–µ –≤–µ—Å–∞ –≤—Ä—É—á–Ω—É—é.")
        try:
            idea_w = float(simpledialog.askstring("–í–µ—Å", "–í–µ—Å –¥–ª—è '–ò–¥–µ—è':"))
            style_w = float(simpledialog.askstring("–í–µ—Å", "–í–µ—Å –¥–ª—è '–°—Ç–∏–ª—å':"))
            plot_w = float(simpledialog.askstring("–í–µ—Å", "–í–µ—Å –¥–ª—è '–°—é–∂–µ—Ç':"))
            emotion_w = float(simpledialog.askstring("–í–µ—Å", "–í–µ—Å –¥–ª—è '–≠–º–æ—Ü–∏–∏':"))
            influence_w = float(simpledialog.askstring("–í–µ—Å", "–í–µ—Å –¥–ª—è '–í–ª–∏—è–Ω–∏–µ':"))
            weights = {"idea": idea_w, "style": style_w, "plot": plot_w, "emotion": emotion_w, "influence": influence_w}
        except Exception:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ –≤–µ—Å–æ–≤. –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
            session.close()
            return
    review.final_score = calculate_final_score(review.idea, review.style, review.plot,
                                                review.emotion, review.influence, weights)
    session.commit()
    session.close()
    messagebox.showinfo("–£—Å–ø–µ—Ö", "–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!")

def delete_review_ui():
    review_id = simpledialog.askstring("–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤", "–í–≤–µ–¥–∏—Ç–µ ID –æ—Ç–∑—ã–≤–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
    if not review_id:
        messagebox.showerror("–û—à–∏–±–∫–∞", "ID –æ—Ç–∑—ã–≤–∞ –Ω–µ –≤–≤–µ–¥—ë–Ω!")
        return
    session = Session()
    review = session.query(Review).filter_by(id=review_id).first()
    if not review:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        session.close()
        return
    confirm = messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ", f"–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤ '{review.title}'?")
    if confirm:
        session.delete(review)
        session.commit()
        messagebox.showinfo("–£—Å–ø–µ—Ö", "–û—Ç–∑—ã–≤ —É–¥–∞–ª—ë–Ω.")
    session.close()

def show_auth_ui():
    global auth_frame, app_frame
    if app_frame is not None:
        app_frame.pack_forget()
    auth_frame.pack(fill=BOTH, expand=True)

def show_app_ui():
    global auth_frame, app_frame
    if auth_frame is not None:
        auth_frame.pack_forget()
    app_frame.pack(fill=BOTH, expand=True)

def create_ui():
    global root, auth_frame, app_frame
    create_tables()
    root = Tk()
    root.title("–°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏ –∫–Ω–∏–≥")
    root.geometry("400x400")
    
    auth_frame = Frame(root)
    Button(auth_frame, text="–í–æ–π—Ç–∏", width=25, command=login).pack(pady=5)
    Button(auth_frame, text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", width=25, command=register).pack(pady=5)
    auth_frame.pack(fill=BOTH, expand=True)
    
    app_frame = Frame(root)
    Button(app_frame, text="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã", width=25, command=view_reviews_ui).pack(pady=5)
    Button(app_frame, text="–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤", width=25, command=write_review_ui).pack(pady=5)
    Button(app_frame, text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", width=25, command=edit_review_ui).pack(pady=5)
    Button(app_frame, text="–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤", width=25, command=delete_review_ui).pack(pady=5)
    
    root.mainloop()

if __name__ == "__main__":
    create_ui()
